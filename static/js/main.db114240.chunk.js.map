{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","addUserTodo","App","useState","setTodo","setTitle","setUserId","validInputTitle","setValidInputTitle","validInputUser","setValidInputUser","onSubmit","event","preventDefault","trim","length","newTodo","Math","max","action","method","type","placeholder","value","onChange","validValue","currentTarget","replace","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db114240.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst addUserTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState(addUserTodo);\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [validInputTitle, setValidInputTitle] = useState(false);\n  const [validInputUser, setValidInputUser] = useState(false);\n\n  const handleInputTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n\n    const regex = /[^a-zA-Zа-яА-Я0-9\\s]+/g;\n\n    const validValue = value.replace(regex, '');\n\n    setTitle(validValue);\n\n    if (validValue) {\n      setValidInputTitle(false);\n    }\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.currentTarget;\n\n    setUserId(+value);\n\n    if (value) {\n      setValidInputUser(false);\n    }\n  };\n\n  const checkValidate = () => {\n    if (!title.trim().length) {\n      setValidInputTitle(true);\n    }\n\n    if (!userId) {\n      setValidInputUser(true);\n    }\n\n    return !title.length || !userId;\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n    setValidInputUser(false);\n    setValidInputTitle(false);\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (checkValidate()) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodo([\n      ...todos,\n      newTodo,\n    ]);\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleAddTodo} action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInputTitle}\n          />\n          {validInputTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleSelectUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n          {validInputUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}